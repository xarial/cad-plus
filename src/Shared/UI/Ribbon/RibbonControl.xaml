<UserControl x:Class="Xarial.CadPlus.Plus.Shared.UI.RibbonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Xarial.CadPlus.Plus.Shared.UI"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
             xmlns:xconv="clr-namespace:Xarial.XToolkit.Wpf.Converters;assembly=Xarial.XToolkit.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:DropDownButtonIsItemSelectedConverter x:Key="isDropDownItemSelectedConv"/>
        <local:ItemHeaderConverter x:Key="itemHeaderConv"/>
        <local:DropDownButtonItemCommandConverter x:Key="dropDownBtnItemCmdConv"/>
        <local:NumericSpinnerVisibilityConverter x:Key="numSpinVisConv"/>
        <xconv:ImageToImageSourceConverter x:Key="imgToSrcConv"/>
        <Style x:Key="RibbonCommandStyle" TargetType="FrameworkElement">
            <Setter Property="ToolTip">
                <Setter.Value>
                    <fluent:ScreenTip Title="{Binding Path=Title}"
                                      Text="{Binding Path=Description}"
                                      Image="{Binding Path=Icon, Converter={StaticResource imgToSrcConv}}" 
                                      IsRibbonAligned="True" />
                </Setter.Value>
            </Setter>
            <Setter Property="MinWidth" Value="60"/>
        </Style>
        <local:RibbonCommandTemplateSelector x:Key="ribbonGrpCmdTemplateSelector">
            <local:RibbonCommandTemplateSelector.Separator>
                <DataTemplate>
                    <Grid VerticalAlignment="Stretch" Height="500">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Stretch">
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" VerticalAlignment="Stretch" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </local:RibbonCommandTemplateSelector.Separator>
            <local:RibbonCommandTemplateSelector.Button>
                <DataTemplate>
                    <fluent:Button Header="{Binding Path=Title}" Margin="1" Style="{StaticResource RibbonCommandStyle}"
                                   Icon="{Binding Path=Icon, Converter={StaticResource imgToSrcConv}}"
                                   LargeIcon="{Binding Path=Icon, Converter={StaticResource imgToSrcConv}}" 
                                   Command="{Binding Path=Command}"/>
                </DataTemplate>
            </local:RibbonCommandTemplateSelector.Button>
            <local:RibbonCommandTemplateSelector.Toggle>
                <DataTemplate>
                    <fluent:ToggleButton Margin="1" Style="{StaticResource RibbonCommandStyle}"
                                         Icon="{Binding Path=Icon, Converter={StaticResource imgToSrcConv}}" 
                                         LargeIcon="{Binding Path=Icon, Converter={StaticResource imgToSrcConv}}"
                                         Header="{Binding Path=Title}"
                                         IsChecked="{Binding Path=Value}"/>
                </DataTemplate>
            </local:RibbonCommandTemplateSelector.Toggle>
            <local:RibbonCommandTemplateSelector.NumericSwitch>
                <DataTemplate>
                    <Grid Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <metro:ToggleSwitch Grid.Column="0" HorizontalAlignment="Stretch"
                                            Style="{StaticResource RibbonCommandStyle}"
                                            VerticalAlignment="Center" 
                                            OnContent="{Binding Path=OnText}" 
                                            OffContent="{Binding Path=OffText}"
                                            IsOn="{Binding Path=Value}"/>

                        <fluent:Spinner Value="{Binding Path=NumericValue}" Style="{StaticResource RibbonCommandStyle}"
                                        Grid.Column="1"
                                        Minimum="{Binding Path=Options.Minimum}" Maximum="{Binding Path=Options.Maximum}"
                                        Format="{Binding Path=Options.Format}" Width="75" Margin="0"
                                        Header="" IsEnabled="{Binding Path=Value}">
                            <fluent:Spinner.Visibility>
                                <MultiBinding Converter="{StaticResource numSpinVisConv}">
                                    <Binding Path="Value"/>
                                    <Binding Path="Options.HideWhenUnchecked"/>
                                </MultiBinding>
                            </fluent:Spinner.Visibility>
                        </fluent:Spinner>
                    </Grid>
                </DataTemplate>
            </local:RibbonCommandTemplateSelector.NumericSwitch>
            <local:RibbonCommandTemplateSelector.Switch>
                <DataTemplate>
                    <metro:ToggleSwitch Margin="2" Style="{StaticResource RibbonCommandStyle}"
                                        VerticalAlignment="Center"
                                        OnContent="{Binding Path=OnText}" 
                                        OffContent="{Binding Path=OffText}"
                                        IsOn="{Binding Path=Value}">
                    </metro:ToggleSwitch>
                </DataTemplate>
            </local:RibbonCommandTemplateSelector.Switch>
            <local:RibbonCommandTemplateSelector.DropDownButton>
                <DataTemplate>
                    <fluent:DropDownButton Margin="1" Style="{StaticResource RibbonCommandStyle}"
                                           LargeIcon="{Binding Path=Icon, Converter={StaticResource imgToSrcConv}}"
                                           Header="{Binding Path=Value, Converter={StaticResource itemHeaderConv}}" 
                                           ItemsSource="{Binding Path=ItemsSource}"
                                           ClosePopupOnMouseDown="True">
                        <fluent:DropDownButton.ItemTemplate>
                            <DataTemplate>
                                <fluent:RadioButton Header="{Binding Converter={StaticResource itemHeaderConv}}" 
                                                    Command="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type fluent:DropDownButton}}, Converter={StaticResource dropDownBtnItemCmdConv}}" 
                                                    CommandParameter="{Binding}">
                                    <fluent:RadioButton.IsChecked>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource isDropDownItemSelectedConv}">
                                            <Binding/>
                                            <Binding Path="DataContext.Value" RelativeSource="{RelativeSource AncestorType={x:Type fluent:DropDownButton}}"/>
                                        </MultiBinding>
                                    </fluent:RadioButton.IsChecked>
                                </fluent:RadioButton>
                            </DataTemplate>
                        </fluent:DropDownButton.ItemTemplate>
                    </fluent:DropDownButton>
                </DataTemplate>
            </local:RibbonCommandTemplateSelector.DropDownButton>
            <local:RibbonCommandTemplateSelector.Custom>
                <DataTemplate>
                    <ContentControl Style="{StaticResource RibbonCommandStyle}"
                                    Content="{Binding Path=Content}" ContentTemplate="{Binding Path=Template}"/>
                </DataTemplate>
            </local:RibbonCommandTemplateSelector.Custom>
        </local:RibbonCommandTemplateSelector>
    </UserControl.Resources>
    <fluent:Ribbon x:Name="ctrlRibbon"/>
</UserControl>

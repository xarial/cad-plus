trigger:
  branches:
    include:
    - '!api-master'
    - '!api-dev'
  paths:
    include:
    - src/*

name: '$(Date:yyyyMMdd).$(Rev:r)[$(BuildID)]'

stages:

- stage: 'Build'
  variables:
  - name: buildConfiguration
    value: Release

  jobs:
  - job:
    pool:
      name: 'Azure Pipelines'
      vmImage: windows-latest
      demands:
        - msbuild
        - visualstudio

    steps:
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
        
      - task: DotNetCoreCLI@2
        displayName: 'Restore NuGet'
        inputs:
          command: restore
          projects: 'cad-plus-api.sln'
          feedsToUse: config
          nugetConfigPath: 'nuget.config'

      - task: DownloadSecureFile@1
        name: Certificate
        displayName: 'Download code signing certificate'
        inputs:
          secureFile: xarial.snk

      - ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/!api-dev'), ne(variables['Build.Reason'], 'PullRequest')) }}:
        - task: VSBuild@1
          displayName: 'Build preview version'
          inputs:
            solution: 'cad-plus-api.sln'
            configuration: '$(BuildConfiguration)'
            msbuildArgs: '/p:SignAssembly=true;AssemblyOriginatorKeyFile=$(Certificate.secureFilePath);DelaySign=false;VersionSuffix=preview;BuildNumber=$(Build.BuildId)'

      - ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/!api-dev'), ne(variables['Build.Reason'], 'PullRequest')) }}:
        - task: DotNetCoreCLI@2
          displayName: 'Pack preview version'
          inputs:
            command: custom
            custom: pack
            arguments: 'cad-plus-api.sln --version-suffix preview --output $(Build.ArtifactStagingDirectory)/packages/preview --no-build /p:Configuration=$(BuildConfiguration);BuildNumber=$(Build.BuildId)'

      - ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/!api-master'), ne(variables['Build.Reason'], 'PullRequest')) }}:
        - task: VSBuild@1
          displayName: 'Build production version'
          inputs:
            solution: 'cad-plus-api.sln'
            configuration: '$(BuildConfiguration)'
            msbuildArgs: '/p:SignAssembly=true;AssemblyOriginatorKeyFile=$(Certificate.secureFilePath);DelaySign=false;BuildNumber=$(Build.BuildId)'
            clean: true

      - ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/!api-master'), ne(variables['Build.Reason'], 'PullRequest')) }}:
        - task: DotNetCoreCLI@2
          displayName: 'Pack production version'
          inputs:
            command: custom
            custom: pack
            arguments: ${{ parameters.projectPath }} --output $(Build.ArtifactStagingDirectory)/packages/release --no-build /p:Configuration=$(BuildConfiguration)
      
      - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
        - publish: '$(Build.ArtifactStagingDirectory)/packages'
          artifact: 'packages'

- stage: 'PublishPreviewNuGetPackage'
  displayName: 'Publish Preview NuGet Package to xarial nuget feed'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/!api-dev'), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: preview
    strategy: 
        runOnce:
          deploy:
            steps:
            - checkout: none

            - download: current
              artifact: packages

            - task: NuGetCommand@2
              displayName: 'Push NuGet Preview Nuget packages'
              inputs:
                command: 'push'
                packagesToPush: '$(Pipeline.Workspace)/packages/preview/*.nupkg'
                nuGetFeedType: 'internal'
                publishVstsFeed: 'cad-plus-community/cadplus-preview'

- stage: 'PublishProductionNuGetPackage'
  variables:
  - group: build-vars
  - name: packagePath
    value:
  displayName: 'Publish Production NuGet Package to nuget.org'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/!api-master'), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - deployment:
    pool:
      vmImage: 'windows-latest'
    environment: production
    strategy: 
        runOnce:
          deploy:
            steps:
            - checkout: none

            - download: current
              artifact: packages

            - task: DownloadSecureFile@1
              name: Certificate
              displayName: 'Download code signing certificate'
              inputs:
                secureFile: xarial-code-signing.pfx

            - task: PowerShell@2
              inputs:
                targetType: 'inline'
                script: |
                  $packagePath = (Get-ChildItem -Path "$(Pipeline.Workspace)/packages/release" -Filter "*.nupkg").FullName
                  Write-Host $packagePath
                  Write-Host "##vso[task.setvariable variable=packagePath;]$packagePath"

            - task: NuGetCommand@2
              displayName: 'Sign NuGet Package'
              inputs:
                command: 'custom'
                arguments: sign "$(PackagePath)" -CertificatePath "$(Certificate.secureFilePath)" -CertificatePassword "$(CODE_SIGN_CERT_PWD)" -Timestamper http://timestamp.comodoca.com
                
            - task: NuGetCommand@2
              displayName: 'Push Production NuGet Packages'
              inputs:
                command: 'push'
                packagesToPush: '$(Pipeline.Workspace)/packages/release/*.nupkg'
                nuGetFeedType: 'external'
                publishFeedCredentials: 'Nuget.org'